import "stdio.qnp"

fn<> funcEmpty():
	pass

fn<> funcNoRetNoParam():
	std.print("Hello world!\n")
	\\ Implicit return statement possible (only on void functions)

fn<> funcNoRetButParam(i32 a):
	std.print(a)
	std.print("\n")
	return						\\ Not necessary

fn<i32> funcRetNoParam():
	return 42

fn<i32> funcRetAndParam(i32 a):
	a *= a
	return a + a

fn<> funcRecursion(i32 a):
	if a > 0:
		std.print(a)
		std.print("\n")
		funcRecursion(a - 1)
	else:
		std.print("Done\n")

fn<> funcDeclared()...

fn<> funcUsingDeclared():
	funcDeclared()

fn<> funcDeclared():
	std.print("Hello from previously declared!\n")

funcEmpty()

funcNoRetNoParam()

funcNoRetButParam(123)

std.print(funcRetNoParam())
std.print("\n")

std.print(funcRetAndParam(123))
std.print("\n")

funcRecursion(10)

funcUsingDeclared()