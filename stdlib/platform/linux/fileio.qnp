\\ QINP Standard Library
\\ File Input/Output - Linux Specific

import "__syscall.qnp"
import "__ioctl.qnp"

import "../../string.qnp"

space std:
	define __OPEN_READONLY 00
	define __OPEN_WRITEONLY 01
	define __OPEN_READWRITE 02



defer
space std:
	pack File!:
		pass

	fn<File*> fopen(u8 const* filename, u8 const* mode) nodiscard!:
		var<i32> flags
		if strcmp(mode, "r") == 0:
			flags = __OPEN_READONLY
		elif strcmp(mode, "w") == 0:
			flags = __OPEN_WRITEONLY
		elif strcmp(mode, "rw") == 0:
			flags = __OPEN_READWRITE
		else:
			return null

		const fd = __syscall(__SYS_OPEN, filename, flags)

		return fd < 0 ? (File*)null : (File*)fd

	fn<u64> fread(File* pFile, void* dest, u64 num)!:
		return __syscall(__SYS_READ, pFile, dest, num)

	fn<u64> fwrite(File* pFile, void const* src, u64 num)!:
		return __syscall(__SYS_WRITE, pFile, src, num)

	fn<> fclose(File* pFile)!:
		__syscall(__SYS_CLOSE, pFile)