\\ QINP Standard Library
\\ Math

space std:
	\\ Returns the smaller of two values
	\\ @param a The first value
	\\ @param b The second value
	\\ @return The smaller of the two values
	fn<?T> min(?T a, ?T b)...

	\\ Returns the smallest of two or more values
	\\ @param a The first value
	\\ @param ... The other values
	\\ @return The smallest of the values
	fn<?T> min(?T a, ...)...

	\\ Returns the larger of two values
	\\ @param a The first value
	\\ @param b The second value
	\\ @return The larger of the two values
	fn<?T> max(?T a, ?T b)...

	\\ Returns the largest of two or more values
	\\ @param a The first value
	\\ @param ... The other values
	\\ @return The largest of the values
	fn<?T> max(?T a, ...)...

	\\ Returns the absolute value of a value
	\\ @param a The value
	\\ @return The absolute value of the value
	fn<?T> abs(?T a)...

	\\ Returns the sign of a value
	\\ @param a The value
	\\ @return The sign of the value
	fn<?T> sign(?T a)...

	\\ Returns the value of base raised to the power of exponent.
	\\ @param base The base
	\\ @param exponent The exponent (must be greater than or equal to 0)
	\\ @return The value of base raised to the power of exponent
	fn<?T> pow(?T base, ?T exponent)...



defer
space std:
	fn<?T> min(?T a, ?T b)!:
		return a < b ? a : b

	fn<?T> min(?T a, ...)!:
		return min(a, min(...))

	fn<?T> max(?T a, ?T b)!:
		return a > b ? a : b

	fn<?T> max(?T a, ...)!:
		return max(a, max(...))

	fn<?T> abs(?T a)!:
		return a < 0 ? -a : a

	fn<?T> sign(?T a)!:
		return a < 0 ? -1 : a > 0 ? 1 : 0

	fn<?T> pow(?T base, ?T exponent)!:
		if exponent == 0: return 1
		var<T> temp = pow(base, exponent / 2)
		if exponent % 2 == 0: return temp * temp
		return base * temp * temp